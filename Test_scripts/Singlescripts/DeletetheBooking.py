import requests
from src.helper.json import payloadTestdata
from src.helper.header import common_header
from src.URL.URLs import url_base, url_endpoint, url_booking_endpoint


# Here, create the new booking data and confirm the booking id collected from the create api.
def post_CreateBooking_repos():
    response = requests.post(f"{url_base()}{url_endpoint()}", headers=common_header(), data=payloadTestdata())
    print(response.json())
    # Collect the booking id from json.
    booking_id = response.json()['bookingid']
    return booking_id


def delete_Booking(booking_id, tokenid):
    headers_json = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Cookie': 'token={0}'.format(tokenid)
    }
    # Here, Delete the booking id that was generated by executing post_CreateBooking_repos().
    res = requests.delete(f"{url_base()}{url_booking_endpoint().format(booking_id)}", headers=headers_json)
    assert res.status_code == 201
    # Here, the booking id collected from the create api post_CreateBooking_repos().
    # Verify that the id is deleted on not.
    resGet = requests.get(f"{url_base()}{url_booking_endpoint().format(booking_id)}")
    assert resGet.status_code == 404
